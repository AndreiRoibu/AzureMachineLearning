{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Data Exploration"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Connect to Workspace"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import azureml.core\n",
        "from azureml.core import Workspace"
      ],
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676831847296
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Here we load a workspace from a saved config file\n",
        "ws = Workspace.from_config()\n",
        "print('Azure ML {} has loaded in the {} workspace.'.format(azureml.core.VERSION, ws.name))"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "Azure ML 1.48.0 has loaded in the andreiroibu-mlworkspace workspace.\n"
        }
      ],
      "execution_count": 2,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676831847452
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Explore the data\n",
        "import pandas as pd\n",
        "\n",
        "df = pd.read_csv('datasets/diabetes.csv')\n",
        "print(df.head())"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "   PatientID  Pregnancies  PlasmaGlucose  DiastolicBloodPressure  \\\n0    1354778            0            171                      80   \n1    1147438            8             92                      93   \n2    1640031            7            115                      47   \n3    1883350            9            103                      78   \n4    1424119            1             85                      59   \n\n   TricepsThickness  SerumInsulin        BMI  DiabetesPedigree  Age  Diabetic  \n0                34            23  43.509726          1.213191   21         0  \n1                47            36  21.240576          0.158365   23         0  \n2                52            35  41.511523          0.079019   23         0  \n3                25           304  29.582192          1.282870   43         1  \n4                27            35  42.604536          0.549542   22         0  \n"
        }
      ],
      "execution_count": 3,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676831849772
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Create an experimental folder"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os, shutil\n",
        "\n",
        "# Make the experiment folder\n",
        "folderName = 'DiabetesDataExploration'\n",
        "experimentFolder = './' + folderName\n",
        "os.makedirs(folderName, exist_ok=True)\n",
        "# Copy the data file into the experiment folder\n",
        "shutil.copy('datasets/diabetes.csv', os.path.join(folderName, 'diabetes.csv'))\n"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 4,
          "data": {
            "text/plain": "'DiabetesDataExploration/diabetes.csv'"
          },
          "metadata": {}
        }
      ],
      "execution_count": 4,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676831854447
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%%writefile $folderName/diabetesDataExploration.py\n",
        "from azure.core import Run\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Get the experimental context\n",
        "run = Run.get_context()\n",
        "\n",
        "df = pd.read_csv('datasets/diabetes.csv')\n",
        "\n",
        "# Log the number of rows\n",
        "rowCount = len(df)\n",
        "run.log('no_observations', rowCount)\n",
        "\n",
        "# Log the summary statistics for numeric columns\n",
        "medicalColumns = ['Pregnancies', 'PlasmaGlucose', 'DiastolicBloodPressure',\n",
        "       'TricepsThickness', 'SerumInsulin', 'BMI', 'Age' ]\n",
        "\n",
        "summaryStatistics = df[medicalColumns].describe().to_dict()\n",
        "for col in summaryStatistics:\n",
        "    keys = list(summaryStatistics[col].keys())\n",
        "    values = list(summaryStatistics[col].values())\n",
        "    for idx in range(len(keys)):\n",
        "        run.log_row(col, stat=keys[idx], values=values[idx])\n",
        "\n",
        "# Log distinct pregnancy counts\n",
        "pregnancies = df.Pregnancies.unique()\n",
        "run.log_list('Pregnancy Categories', pregnancies)\n",
        "\n",
        "# Count and Log Diabetic Lables\n",
        "labels = df['Diabetic'].value_counts()\n",
        "for key, value in labels:\n",
        "    run.log('Label:' + str(key), value)\n",
        "\n",
        "# Plot and log the distribution of diabetic vs non-diabetic\n",
        "diabeticCounts = df['Diabetic'].value_counts()\n",
        "fig = plt.figure(figsize=(6,6))\n",
        "ax = fig.gca()    \n",
        "diabeticCounts.plot.bar(ax = ax) \n",
        "ax.set_title('Patients with Diabetes') \n",
        "ax.set_xlabel('Diagnosis') \n",
        "ax.set_ylabel('Patients')\n",
        "plt.show()\n",
        "run.log_image(name='label distribution', plot=fig)\n",
        "\n",
        "# Save a sample of the data\n",
        "df.sample(100).to_csv('diabetesSample.csv', index=False, header=True)\n",
        "run.upload_file(name='outputs/diabetesSample.csv', path_or_stream='./diabetesSample.csv')\n",
        "\n",
        "run.complete()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "Overwriting DiabetesDataExploration/diabetesDataExploration.py\n"
        }
      ],
      "execution_count": 5,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Run an Experiment\n",
        "\n",
        "Here we will run an AzureML experiment performing basic data analysis. Azure Experiment will enable the logging of run details. "
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core import Experiment, ScriptRunConfig, Environment\n",
        "from azureml.core.runconfig import DockerConfiguration\n",
        "from azureml.widgets import RunDetails\n",
        "\n",
        "# Create a Python environment for the experiment (from a .yml file)\n",
        "env = Environment.from_conda_specification('expEnv', 'environment.yml')\n",
        "\n",
        "# Create the ScriptConfig that identifies the Python Script to be ran\n",
        "scriptConfig = ScriptRunConfig(source_directory=experimentFolder,\n",
        "                                script='diabetesDataExploration.py',\n",
        "                                environment=env,\n",
        "                                docker_runtime_config=DockerConfiguration(use_docker=True)\n",
        "                                )\n",
        "# Submit the experiment\n",
        "experiment = Experiment(workspace=ws, name='andreiroibu-diabetes')\n",
        "run = experiment.submit(config=scriptConfig)\n",
        "RunDetails(run).show()\n",
        "run.wait_for_completion()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "_UserRunWidget(widget_settings={'childWidgetDisplay': 'popup', 'send_telemetry': False, 'log_level': 'INFO', 'â€¦",
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "96d6c8902e4e4dd28b6f46809800f3e6"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "application/aml.mini.widget.v1": "{\"status\": \"Preparing\", \"workbench_run_details_uri\": \"https://ml.azure.com/runs/andreiroibu-diabetes_1676831861_5db99ffe?wsid=/subscriptions/e55bdbb6-7223-49e7-9b21-e23c267f6421/resourcegroups/andreiroibu-azureml/workspaces/andreiroibu-mlworkspace&tid=cc95de1b-97f5-4f93-b4ba-fe68b852cf91\", \"run_id\": \"andreiroibu-diabetes_1676831861_5db99ffe\", \"run_properties\": {\"run_id\": \"andreiroibu-diabetes_1676831861_5db99ffe\", \"created_utc\": \"2023-02-19T18:37:41.831368Z\", \"properties\": {\"_azureml.ComputeTargetType\": \"local\", \"ContentSnapshotId\": \"3e4ae00a-3ca4-4b33-90d0-ed49095ec963\", \"azureml.git.repository_uri\": \"https://github.com/AndreiRoibu/AzureMachineLearning.git\", \"mlflow.source.git.repoURL\": \"https://github.com/AndreiRoibu/AzureMachineLearning.git\", \"azureml.git.branch\": \"main\", \"mlflow.source.git.branch\": \"main\", \"azureml.git.commit\": \"4b48f345cf05de07191c213413d860449de904c8\", \"mlflow.source.git.commit\": \"4b48f345cf05de07191c213413d860449de904c8\", \"azureml.git.dirty\": \"True\"}, \"tags\": {}, \"script_name\": null, \"arguments\": null, \"end_time_utc\": null, \"status\": \"Preparing\", \"log_files\": {\"azureml-logs/60_control_log.txt\": \"https://andreirostorage3f03219e8.blob.core.windows.net/azureml/ExperimentRun/dcid.andreiroibu-diabetes_1676831861_5db99ffe/azureml-logs/60_control_log.txt?sv=2019-07-07&sr=b&sig=vLj7BRuBCKG0DpwRxOfGedIG3DvMdQIoyPq9tt50kAg%3D&skoid=01a139e8-29a5-422a-b22c-0a9f38600c8a&sktid=cc95de1b-97f5-4f93-b4ba-fe68b852cf91&skt=2023-02-19T17%3A39%3A54Z&ske=2023-02-21T01%3A49%3A54Z&sks=b&skv=2019-07-07&st=2023-02-19T18%3A28%3A23Z&se=2023-02-20T02%3A38%3A23Z&sp=r\"}, \"log_groups\": [[\"azureml-logs/60_control_log.txt\"]], \"run_duration\": \"0:00:59\", \"run_number\": \"1676831861\", \"run_queued_details\": {\"status\": \"Preparing\", \"details\": null}}, \"child_runs\": [], \"children_metrics\": {}, \"run_metrics\": [], \"run_logs\": \"[2023-02-19T18:37:42.546359] Using urllib.request Python 3.0 or later\\nStreaming log file azureml-logs/60_control_log.txt\\nStarting the daemon thread to refresh tokens in background for process with pid = 46930\\nRunning: ['/bin/bash', '/tmp/azureml_runs/andreiroibu-diabetes_1676831861_5db99ffe/azureml-environment-setup/docker_env_checker.sh']\\n\\nMaterialized image not found on target: azureml/azureml_92b2901e807b866a6a54696086140475\\n\\n\\n[2023-02-19T18:37:43.068060] Logging experiment preparation status in history service.\\nRunning: ['/bin/bash', '/tmp/azureml_runs/andreiroibu-diabetes_1676831861_5db99ffe/azureml-environment-setup/docker_env_builder.sh']\\nRunning: ['nvidia-docker', 'build', '-f', 'azureml-environment-setup/Dockerfile', '-t', 'azureml/azureml_92b2901e807b866a6a54696086140475', '.']\\nSending build context to Docker daemon  1.133MB\\nStep 1/17 : FROM mcr.microsoft.com/azureml/openmpi4.1.0-ubuntu20.04:20221101.v1@sha256:4505a963b2d34a42b5eaef48b8142ca98123d05d3a95eee3fe57551570a70e3b\\n ---> b6fd6a8d28e9\\nStep 2/17 : USER root\\n ---> Using cache\\n ---> 19e20ae5f003\\nStep 3/17 : RUN mkdir -p $HOME/.cache\\n ---> Using cache\\n ---> 12d7a51423ac\\nStep 4/17 : WORKDIR /\\n ---> Using cache\\n ---> de05a43b4c85\\nStep 5/17 : COPY azureml-environment-setup/99brokenproxy /etc/apt/apt.conf.d/\\n ---> Using cache\\n ---> 71317629a631\\nStep 6/17 : RUN if dpkg --compare-versions `conda --version | grep -oE '[^ ]+$'` lt 4.4.11; then conda install conda==4.4.11; fi\\n ---> Using cache\\n ---> 77890b84369b\\nStep 7/17 : COPY azureml-environment-setup/mutated_conda_dependencies.yml azureml-environment-setup/mutated_conda_dependencies.yml\\n ---> Using cache\\n ---> aadb1e3a36c5\\nStep 8/17 : RUN ldconfig /usr/local/cuda/lib64/stubs && conda env create -p /azureml-envs/azureml_924c0b91c99659fd0cbbe533e5584a89 -f azureml-environment-setup/mutated_conda_dependencies.yml && rm -rf \\\"$HOME/.cache/pip\\\" && conda clean -aqy && CONDA_ROOT_DIR=$(conda info --root) && rm -rf \\\"$CONDA_ROOT_DIR/pkgs\\\" && find \\\"$CONDA_ROOT_DIR\\\" -type d -name __pycache__ -exec rm -rf {} + && ldconfig\\n ---> Running in 4e386fe3dc94\\nCollecting package metadata (repodata.json): ...working... done\\nSolving environment: ...working... done\\n\\nDownloading and Extracting Packages\\npillow-9.3.0         | 728 KB    | ########## | 100% \\nlibwebp-base-1.2.4   | 347 KB    | ########## | 100% \\njpeg-9e              | 240 KB    | ########## | 100% \\ncertifi-2022.12.7    | 150 KB    | ########## | 100% \\nseaborn-0.12.2       | 491 KB    | ########## | 100% \\nnumpy-1.23.5         | 10 KB     | ########## | 100% \\nncurses-6.4          | 914 KB    | ########## | 100% \\ncycler-0.11.0        | 12 KB     | ########## | 100% \\npyparsing-3.0.9      | 152 KB    | ########## | 100% \\nfonttools-4.25.0     | 632 KB    | ########## | 100% \\nintel-openmp-2021.4. | 4.2 MB    | ########## | 100% \\nlibtiff-4.5.0        | 524 KB    | ########## | 100% \\nca-certificates-2023 | 120 KB    | ########## | 100% \\nld_impl_linux-64-2.3 | 654 KB    | ########## | 100% \\nmkl_random-1.2.2     | 308 KB    | ########## | 100% \\ntk-8.6.12            | 3.0 MB    | ########## | 100% \\nlibwebp-1.2.4        | 79 KB     | ########## | 100% \\nlz4-c-1.9.4          | 154 KB    | ########## | 100% \\nlibdeflate-1.8       | 51 KB     | ########## | 100% \\nlibgomp-11.2.0       | 474 KB    | ########## | 100% \\nwheel-0.38.4         | 63 KB     | ########## | 100% \\nbrotli-1.0.9         | 18 KB     | ########## | 100% \\nlibgfortran5-11.2.0  | 2.0 MB    | ########## | 100% \\nmatplotlib-base-3.6. | 6.5 MB    | ########## | 100% \\ncontourpy-1.0.5      | 203 KB    | ########## | 100% \\ngiflib-5.2.1         | 75 KB     | ########## | 100% \\nscipy-1.9.3          | 22.3 MB   | ########## | 100% \\nscikit-learn-1.2.0   | 7.6 MB    | ########## | 100% \\nlibgfortran-ng-11.2. | 20 KB     | ########## | 100% \\nreadline-8.2         | 357 KB    | ########## | 100% \\npython-3.8.16        | 23.9 MB   | ########## | 100% \\nmkl_fft-1.3.1        | 180 KB    | ########## | 100% \\nsqlite-3.40.1        | 1.2 MB    | ########## | 100% \\npackaging-22.0       | 68 KB     | ########## | 100% \\nxz-5.2.10            | 429 KB    | ########## | 100% \\npandas-1.5.2         | 12.0 MB   | ########## | 100% \\nbrotli-bin-1.0.9     | 19 KB     | ########## | 100% \\nbottleneck-1.3.5     | 115 KB    | ########## | 100% \\nnumexpr-2.8.4        | 134 KB    | ########## | 100% \\nlibffi-3.4.2         | 136 KB    | ########## | 100% \\nlibstdcxx-ng-11.2.0  | 4.7 MB    | ########## | 100% \\nzstd-1.5.2           | 488 KB    | ########## | 100% \\nthreadpoolctl-2.2.0  | 16 KB     | ########## | 100% \\nmkl-service-2.4.0    | 59 KB     | ########## | 100% \\nlerc-3.0             | 196 KB    | ########## | 100% \\nsix-1.16.0           | 18 KB     | ########## | 100% \\nblas-1.0             | 6 KB      | ########## | 100% \\nlibbrotlienc-1.0.9   | 264 KB    | ########## | 100% \\nfreetype-2.12.1      | 626 KB    | ########## | 100% \\nmunkres-1.1.4        | 13 KB     | ########## | 100% \\nfftw-3.3.9           | 2.3 MB    | ########## | 100% \\nzlib-1.2.13          | 103 KB    | ########## | 100% \\nopenssl-1.1.1t       | 3.7 MB    | ########## | 100% \\n_libgcc_mutex-0.1    | 3 KB      | ########## | 100% \\nlibbrotlidec-1.0.9   | 31 KB     | ########## | 100% \\nlibbrotlicommon-1.0. | 70 KB     | ########## | 100% \\nlibpng-1.6.37        | 278 KB    | ########## | 100% \\nkiwisolver-1.4.4     | 76 KB     | ########## | 100% \\njoblib-1.1.1         | 382 KB    | ########## | 100% \\npip-22.3.1           | 2.7 MB    | ########## | 100% \\nsetuptools-65.6.3    | 1.1 MB    | ########## | 100% \\nlcms2-2.12           | 312 KB    | ########## | 100% \\nnumpy-base-1.23.5    | 6.7 MB    | ########## | 100% \\nmkl-2021.4.0         | 142.6 MB  | ########## | 100% \\n_openmp_mutex-5.1    | 21 KB     | ########## | 100% \\npytz-2022.7          | 209 KB    | ########## | 100% \\nlibgcc-ng-11.2.0     | 5.3 MB    | ########## | 100% \\npython-dateutil-2.8. | 233 KB    | ########## | 100% \\nPreparing transaction: ...working... done\\nVerifying transaction: ...working... done\\nExecuting transaction: ...working... \\n\\n    Installed package of scikit-learn can be accelerated using scikit-learn-intelex.\\n    More details are available here: https://intel.github.io/scikit-learn-intelex\\n\\n    For example:\\n\\n        $ conda install scikit-learn-intelex\\n        $ python -m sklearnex my_application.py\\n\\n    \\n\\ndone\\n\", \"graph\": {}, \"widget_settings\": {\"childWidgetDisplay\": \"popup\", \"send_telemetry\": false, \"log_level\": \"INFO\", \"sdk_version\": \"1.48.0\"}, \"loading\": false}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 6,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676831836085
        }
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# from azureml.core import Experiment\n",
        "# import numpy as np\n",
        "# import pandas as pd\n",
        "# import matplotlib.pyplot as plt\n",
        "# %matplotlib inline\n",
        "# import seaborn as sns"
      ],
      "outputs": [],
      "execution_count": 3,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676827740070
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# # Create an AzureML experiment\n",
        "# experiment = Experiment(workspace=ws, name='andreiroibu-diabetes')\n",
        "\n",
        "# # Load the data\n",
        "# df = pd.read_csv('datasets/diabetes.csv')\n",
        "# print(df.head())"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "   PatientID  Pregnancies  PlasmaGlucose  DiastolicBloodPressure  \\\n0    1354778            0            171                      80   \n1    1147438            8             92                      93   \n2    1640031            7            115                      47   \n3    1883350            9            103                      78   \n4    1424119            1             85                      59   \n\n   TricepsThickness  SerumInsulin        BMI  DiabetesPedigree  Age  Diabetic  \n0                34            23  43.509726          1.213191   21         0  \n1                47            36  21.240576          0.158365   23         0  \n2                52            35  41.511523          0.079019   23         0  \n3                25           304  29.582192          1.282870   43         1  \n4                27            35  42.604536          0.549542   22         0  \n"
        }
      ],
      "execution_count": 20,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676828508014
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# # Star a logging data session from the experiment\n",
        "# run = experiment.start_logging()\n",
        "# print(\"Starting Experiment {}\".format(experiment.name))\n",
        "\n",
        "# # Log the number of rows\n",
        "# rowCount = len(df)\n",
        "# run.log('no_observations', rowCount)\n",
        "\n",
        "# # Log the summary statistics for numeric columns\n",
        "# medicalColumns = ['Pregnancies', 'PlasmaGlucose', 'DiastolicBloodPressure',\n",
        "#        'TricepsThickness', 'SerumInsulin', 'BMI', 'Age' ]\n",
        "\n",
        "# summaryStatistics = df[medicalColumns].describe().to_dict()\n",
        "# for col in summaryStatistics:\n",
        "#     keys = list(summaryStatistics[col].keys())\n",
        "#     values = list(summaryStatistics[col].values())\n",
        "#     for idx in range(len(keys)):\n",
        "#         run.log_row(col, stat=keys[idx], values=values[idx])\n",
        "\n",
        "# # log distinct pregnancy counts\n",
        "# pregnancies = df.Pregnancies.unique()\n",
        "# run.log_list('Pregnancy Categories', pregnancies)\n",
        "\n",
        "# # Plot and log the distribution of diabetic vs non-diabetic\n",
        "# diabeticCounts = df['Diabetic'].value_counts()\n",
        "# fig = plt.figure(figsize=(6,6))\n",
        "# ax = fig.gca()    \n",
        "# diabeticCounts.plot.bar(ax = ax) \n",
        "# ax.set_title('Patients with Diabetes') \n",
        "# ax.set_xlabel('Diagnosis') \n",
        "# ax.set_ylabel('Patients')\n",
        "# plt.show()\n",
        "# run.log_image(name='label distribution', plot=fig)\n",
        "\n",
        "# # Save a sample of the data\n",
        "# df.sample(100).to_csv('diabetesSample.csv', index=False, header=True)\n",
        "# run.upload_file(name='outputs/diabetesSample.csv', path_or_stream='./diabetesSample.csv')\n",
        "\n",
        "# # Complete the run\n",
        "# run.complete()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "Starting Experiment andreiroibu-diabetes\n"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 600x600 with 1 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "execution_count": 26,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676829254669
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## View Run Details"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "The above results can either be visualised in the ***Jobs > (job name)*** run details area, or can be interogated using the SDK."
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# from azureml.widgets import RunDetails\n",
        "# RunDetails(run).show()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "_UserRunWidget(widget_settings={'childWidgetDisplay': 'popup', 'send_telemetry': False, 'log_level': 'INFO', 'â€¦",
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "c3479db0e2da4e59b49c749e9d7c52ca"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "application/aml.mini.widget.v1": "{\"status\": \"Completed\", \"workbench_run_details_uri\": \"https://ml.azure.com/runs/0c6d9f05-e86c-4179-b024-7a36b747af6d?wsid=/subscriptions/e55bdbb6-7223-49e7-9b21-e23c267f6421/resourcegroups/andreiroibu-azureml/workspaces/andreiroibu-mlworkspace&tid=cc95de1b-97f5-4f93-b4ba-fe68b852cf91\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"run_properties\": {\"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"created_utc\": \"2023-02-19T17:54:05.704532Z\", \"properties\": {\"azureml.git.repository_uri\": \"https://github.com/AndreiRoibu/AzureMachineLearning.git\", \"mlflow.source.git.repoURL\": \"https://github.com/AndreiRoibu/AzureMachineLearning.git\", \"azureml.git.branch\": \"main\", \"mlflow.source.git.branch\": \"main\", \"azureml.git.commit\": \"9dc35540e3400103c401c207864eb19d17adf017\", \"mlflow.source.git.commit\": \"9dc35540e3400103c401c207864eb19d17adf017\", \"azureml.git.dirty\": \"True\", \"ContentSnapshotId\": \"55585d8a-a866-4efa-93d6-86a7147df50a\"}, \"tags\": {}, \"end_time_utc\": \"2023-02-19T17:54:14.526171Z\", \"status\": \"Completed\", \"log_files\": {}, \"log_groups\": [], \"run_duration\": \"0:00:08\", \"run_number\": \"1676829245\", \"run_queued_details\": {\"status\": \"Completed\", \"details\": null}}, \"child_runs\": [], \"children_metrics\": {}, \"run_metrics\": [{\"name\": \"BMI\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0], \"series\": [{\"data\": [{\"stat\": [\"count\", \"25%\", \"50%\", \"75%\", \"max\", \"mean\", \"std\", \"min\"], \"values\": [10000.0, 21.247426835, 31.922420785, 39.3289214475, 56.03462763, 31.56702174359113, 9.804365693559113, 18.20080735]}]}]}, {\"name\": \"no_observations\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0], \"series\": [{\"data\": [10000]}]}, {\"name\": \"Age\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0], \"series\": [{\"data\": [{\"stat\": [\"count\", \"mean\", \"std\", \"min\", \"25%\", \"50%\", \"75%\", \"max\"], \"values\": [10000.0, 30.1341, 12.106046952960462, 21.0, 22.0, 24.0, 35.0, 77.0]}]}]}, {\"name\": \"Pregnancies\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0], \"series\": [{\"data\": [{\"stat\": [\"count\", \"mean\", \"std\", \"min\", \"25%\", \"50%\", \"75%\", \"max\"], \"values\": [10000.0, 3.2558, 3.4057196379950074, 0.0, 0.0, 2.0, 6.0, 14.0]}]}]}, {\"name\": \"Pregnancy Categories\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], \"series\": [{\"data\": [0, 8, 7, 9, 1, 3, 5, 2, 6, 11, 4, 13, 10, 12, 14]}]}, {\"name\": \"PlasmaGlucose\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0], \"series\": [{\"data\": [{\"stat\": [\"count\", \"mean\", \"std\", \"min\", \"25%\", \"50%\", \"75%\", \"max\"], \"values\": [10000.0, 107.8502, 31.920909360565563, 44.0, 84.0, 105.0, 129.0, 192.0]}]}]}, {\"name\": \"label distribution\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0], \"series\": [{\"data\": [\"aml://artifactId/ExperimentRun/dcid.0c6d9f05-e86c-4179-b024-7a36b747af6d/label distribution_1676829248.png\"]}]}, {\"name\": \"DiastolicBloodPressure\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0], \"series\": [{\"data\": [{\"stat\": [\"count\", \"mean\", \"std\", \"min\", \"25%\", \"50%\", \"75%\", \"max\"], \"values\": [10000.0, 71.2075, 16.801478289640706, 24.0, 58.0, 72.0, 85.0, 117.0]}]}]}, {\"name\": \"TricepsThickness\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0], \"series\": [{\"data\": [{\"stat\": [\"count\", \"mean\", \"std\", \"min\", \"25%\", \"50%\", \"75%\", \"max\"], \"values\": [10000.0, 28.8176, 14.506480415228332, 7.0, 15.0, 31.0, 41.0, 92.0]}]}]}, {\"name\": \"SerumInsulin\", \"run_id\": \"0c6d9f05-e86c-4179-b024-7a36b747af6d\", \"categories\": [0], \"series\": [{\"data\": [{\"stat\": [\"count\", \"mean\", \"std\", \"min\", \"25%\", \"50%\", \"75%\", \"max\"], \"values\": [10000.0, 139.2436, 133.77791937465278, 14.0, 39.0, 85.0, 197.0, 796.0]}]}]}], \"run_logs\": \"\\nRun is completed.\", \"graph\": {}, \"widget_settings\": {\"childWidgetDisplay\": \"popup\", \"send_telemetry\": false, \"log_level\": \"INFO\", \"sdk_version\": \"1.48.0\"}, \"loading\": false}"
          },
          "metadata": {}
        },
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "'log_files'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:756\u001b[0m, in \u001b[0;36mWidget._handle_msg\u001b[0;34m(self, msg)\u001b[0m\n\u001b[1;32m    754\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffer_paths\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;129;01min\u001b[39;00m data:\n\u001b[1;32m    755\u001b[0m             _put_buffers(state, data[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffer_paths\u001b[39m\u001b[38;5;124m'\u001b[39m], msg[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffers\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m--> 756\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mset_state\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstate\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    758\u001b[0m \u001b[38;5;66;03m# Handle a state request.\u001b[39;00m\n\u001b[1;32m    759\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m method \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrequest_state\u001b[39m\u001b[38;5;124m'\u001b[39m:\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:625\u001b[0m, in \u001b[0;36mWidget.set_state\u001b[0;34m(self, sync_data)\u001b[0m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mkeys:\n\u001b[1;32m    623\u001b[0m     from_json \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtrait_metadata(name, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfrom_json\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m    624\u001b[0m                                     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_trait_from_json)\n\u001b[0;32m--> 625\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mset_trait(name, from_json(sync_data[name], \u001b[38;5;28mself\u001b[39m))\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/contextlib.py:120\u001b[0m, in \u001b[0;36m_GeneratorContextManager.__exit__\u001b[0;34m(self, type, value, traceback)\u001b[0m\n\u001b[1;32m    118\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mtype\u001b[39m \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    119\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 120\u001b[0m         \u001b[38;5;28;43mnext\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgen\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    121\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mStopIteration\u001b[39;00m:\n\u001b[1;32m    122\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1498\u001b[0m, in \u001b[0;36mHasTraits.hold_trait_notifications\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1496\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m changes \u001b[38;5;129;01min\u001b[39;00m cache\u001b[38;5;241m.\u001b[39mvalues():\n\u001b[1;32m   1497\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m change \u001b[38;5;129;01min\u001b[39;00m changes:\n\u001b[0;32m-> 1498\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnotify_change\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:686\u001b[0m, in \u001b[0;36mWidget.notify_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m    683\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mkeys \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_should_send_property(name, \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, name)):\n\u001b[1;32m    684\u001b[0m         \u001b[38;5;66;03m# Send new state to front-end\u001b[39;00m\n\u001b[1;32m    685\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msend_state(key\u001b[38;5;241m=\u001b[39mname)\n\u001b[0;32m--> 686\u001b[0m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mWidget\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnotify_change\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1513\u001b[0m, in \u001b[0;36mHasTraits.notify_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m   1511\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mnotify_change\u001b[39m(\u001b[38;5;28mself\u001b[39m, change):\n\u001b[1;32m   1512\u001b[0m     \u001b[38;5;124;03m\"\"\"Notify observers of a change event\"\"\"\u001b[39;00m\n\u001b[0;32m-> 1513\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_notify_observers\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1560\u001b[0m, in \u001b[0;36mHasTraits._notify_observers\u001b[0;34m(self, event)\u001b[0m\n\u001b[1;32m   1557\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(c, EventHandler) \u001b[38;5;129;01mand\u001b[39;00m c\u001b[38;5;241m.\u001b[39mname \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   1558\u001b[0m     c \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, c\u001b[38;5;241m.\u001b[39mname)\n\u001b[0;32m-> 1560\u001b[0m \u001b[43mc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mevent\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/azureml/widgets/_userrun/_run_details.py:632\u001b[0m, in \u001b[0;36m_UserRunDetails._on_selected_run_log_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m    630\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_on_selected_run_log_change\u001b[39m(\u001b[38;5;28mself\u001b[39m, change):\n\u001b[1;32m    631\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mselected_run_log \u001b[38;5;241m=\u001b[39m change\u001b[38;5;241m.\u001b[39mnew\n\u001b[0;32m--> 632\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_get_run_logs_async(\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mwidget_instance\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrun_properties\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mlog_files\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m,\n\u001b[1;32m    633\u001b[0m                              \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mwidget_instance\u001b[38;5;241m.\u001b[39mrun_properties[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstatus\u001b[39m\u001b[38;5;124m'\u001b[39m],\n\u001b[1;32m    634\u001b[0m                              \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39merror, change\u001b[38;5;241m.\u001b[39mnew)\n",
            "\u001b[0;31mKeyError\u001b[0m: 'log_files'"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "'log_files'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:756\u001b[0m, in \u001b[0;36mWidget._handle_msg\u001b[0;34m(self, msg)\u001b[0m\n\u001b[1;32m    754\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffer_paths\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;129;01min\u001b[39;00m data:\n\u001b[1;32m    755\u001b[0m             _put_buffers(state, data[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffer_paths\u001b[39m\u001b[38;5;124m'\u001b[39m], msg[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffers\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m--> 756\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mset_state\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstate\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    758\u001b[0m \u001b[38;5;66;03m# Handle a state request.\u001b[39;00m\n\u001b[1;32m    759\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m method \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrequest_state\u001b[39m\u001b[38;5;124m'\u001b[39m:\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:625\u001b[0m, in \u001b[0;36mWidget.set_state\u001b[0;34m(self, sync_data)\u001b[0m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mkeys:\n\u001b[1;32m    623\u001b[0m     from_json \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtrait_metadata(name, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfrom_json\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m    624\u001b[0m                                     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_trait_from_json)\n\u001b[0;32m--> 625\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mset_trait(name, from_json(sync_data[name], \u001b[38;5;28mself\u001b[39m))\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/contextlib.py:120\u001b[0m, in \u001b[0;36m_GeneratorContextManager.__exit__\u001b[0;34m(self, type, value, traceback)\u001b[0m\n\u001b[1;32m    118\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mtype\u001b[39m \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    119\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 120\u001b[0m         \u001b[38;5;28;43mnext\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgen\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    121\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mStopIteration\u001b[39;00m:\n\u001b[1;32m    122\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1498\u001b[0m, in \u001b[0;36mHasTraits.hold_trait_notifications\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1496\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m changes \u001b[38;5;129;01min\u001b[39;00m cache\u001b[38;5;241m.\u001b[39mvalues():\n\u001b[1;32m   1497\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m change \u001b[38;5;129;01min\u001b[39;00m changes:\n\u001b[0;32m-> 1498\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnotify_change\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:686\u001b[0m, in \u001b[0;36mWidget.notify_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m    683\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mkeys \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_should_send_property(name, \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, name)):\n\u001b[1;32m    684\u001b[0m         \u001b[38;5;66;03m# Send new state to front-end\u001b[39;00m\n\u001b[1;32m    685\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msend_state(key\u001b[38;5;241m=\u001b[39mname)\n\u001b[0;32m--> 686\u001b[0m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mWidget\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnotify_change\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1513\u001b[0m, in \u001b[0;36mHasTraits.notify_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m   1511\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mnotify_change\u001b[39m(\u001b[38;5;28mself\u001b[39m, change):\n\u001b[1;32m   1512\u001b[0m     \u001b[38;5;124;03m\"\"\"Notify observers of a change event\"\"\"\u001b[39;00m\n\u001b[0;32m-> 1513\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_notify_observers\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1560\u001b[0m, in \u001b[0;36mHasTraits._notify_observers\u001b[0;34m(self, event)\u001b[0m\n\u001b[1;32m   1557\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(c, EventHandler) \u001b[38;5;129;01mand\u001b[39;00m c\u001b[38;5;241m.\u001b[39mname \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   1558\u001b[0m     c \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, c\u001b[38;5;241m.\u001b[39mname)\n\u001b[0;32m-> 1560\u001b[0m \u001b[43mc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mevent\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/azureml/widgets/_userrun/_run_details.py:632\u001b[0m, in \u001b[0;36m_UserRunDetails._on_selected_run_log_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m    630\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_on_selected_run_log_change\u001b[39m(\u001b[38;5;28mself\u001b[39m, change):\n\u001b[1;32m    631\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mselected_run_log \u001b[38;5;241m=\u001b[39m change\u001b[38;5;241m.\u001b[39mnew\n\u001b[0;32m--> 632\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_get_run_logs_async(\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mwidget_instance\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrun_properties\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mlog_files\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m,\n\u001b[1;32m    633\u001b[0m                              \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mwidget_instance\u001b[38;5;241m.\u001b[39mrun_properties[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstatus\u001b[39m\u001b[38;5;124m'\u001b[39m],\n\u001b[1;32m    634\u001b[0m                              \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39merror, change\u001b[38;5;241m.\u001b[39mnew)\n",
            "\u001b[0;31mKeyError\u001b[0m: 'log_files'"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "'log_files'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:756\u001b[0m, in \u001b[0;36mWidget._handle_msg\u001b[0;34m(self, msg)\u001b[0m\n\u001b[1;32m    754\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffer_paths\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;129;01min\u001b[39;00m data:\n\u001b[1;32m    755\u001b[0m             _put_buffers(state, data[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffer_paths\u001b[39m\u001b[38;5;124m'\u001b[39m], msg[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffers\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m--> 756\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mset_state\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstate\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    758\u001b[0m \u001b[38;5;66;03m# Handle a state request.\u001b[39;00m\n\u001b[1;32m    759\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m method \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrequest_state\u001b[39m\u001b[38;5;124m'\u001b[39m:\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:625\u001b[0m, in \u001b[0;36mWidget.set_state\u001b[0;34m(self, sync_data)\u001b[0m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mkeys:\n\u001b[1;32m    623\u001b[0m     from_json \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtrait_metadata(name, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfrom_json\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m    624\u001b[0m                                     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_trait_from_json)\n\u001b[0;32m--> 625\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mset_trait(name, from_json(sync_data[name], \u001b[38;5;28mself\u001b[39m))\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/contextlib.py:120\u001b[0m, in \u001b[0;36m_GeneratorContextManager.__exit__\u001b[0;34m(self, type, value, traceback)\u001b[0m\n\u001b[1;32m    118\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mtype\u001b[39m \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    119\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 120\u001b[0m         \u001b[38;5;28;43mnext\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgen\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    121\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mStopIteration\u001b[39;00m:\n\u001b[1;32m    122\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1498\u001b[0m, in \u001b[0;36mHasTraits.hold_trait_notifications\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1496\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m changes \u001b[38;5;129;01min\u001b[39;00m cache\u001b[38;5;241m.\u001b[39mvalues():\n\u001b[1;32m   1497\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m change \u001b[38;5;129;01min\u001b[39;00m changes:\n\u001b[0;32m-> 1498\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnotify_change\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:686\u001b[0m, in \u001b[0;36mWidget.notify_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m    683\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mkeys \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_should_send_property(name, \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, name)):\n\u001b[1;32m    684\u001b[0m         \u001b[38;5;66;03m# Send new state to front-end\u001b[39;00m\n\u001b[1;32m    685\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msend_state(key\u001b[38;5;241m=\u001b[39mname)\n\u001b[0;32m--> 686\u001b[0m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mWidget\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnotify_change\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1513\u001b[0m, in \u001b[0;36mHasTraits.notify_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m   1511\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mnotify_change\u001b[39m(\u001b[38;5;28mself\u001b[39m, change):\n\u001b[1;32m   1512\u001b[0m     \u001b[38;5;124;03m\"\"\"Notify observers of a change event\"\"\"\u001b[39;00m\n\u001b[0;32m-> 1513\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_notify_observers\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1560\u001b[0m, in \u001b[0;36mHasTraits._notify_observers\u001b[0;34m(self, event)\u001b[0m\n\u001b[1;32m   1557\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(c, EventHandler) \u001b[38;5;129;01mand\u001b[39;00m c\u001b[38;5;241m.\u001b[39mname \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   1558\u001b[0m     c \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, c\u001b[38;5;241m.\u001b[39mname)\n\u001b[0;32m-> 1560\u001b[0m \u001b[43mc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mevent\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/azureml/widgets/_userrun/_run_details.py:632\u001b[0m, in \u001b[0;36m_UserRunDetails._on_selected_run_log_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m    630\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_on_selected_run_log_change\u001b[39m(\u001b[38;5;28mself\u001b[39m, change):\n\u001b[1;32m    631\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mselected_run_log \u001b[38;5;241m=\u001b[39m change\u001b[38;5;241m.\u001b[39mnew\n\u001b[0;32m--> 632\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_get_run_logs_async(\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mwidget_instance\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrun_properties\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mlog_files\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m,\n\u001b[1;32m    633\u001b[0m                              \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mwidget_instance\u001b[38;5;241m.\u001b[39mrun_properties[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstatus\u001b[39m\u001b[38;5;124m'\u001b[39m],\n\u001b[1;32m    634\u001b[0m                              \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39merror, change\u001b[38;5;241m.\u001b[39mnew)\n",
            "\u001b[0;31mKeyError\u001b[0m: 'log_files'"
          ]
        }
      ],
      "execution_count": 27,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676831647113
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import json\n",
        "print('Metrics:')\n",
        "metrics = run.get_metrics()\n",
        "for metricName in metrics:\n",
        "    print(metricName, '-', metrics[metricName])\n",
        "    print('---')\n",
        "\n",
        "print('\\n')\n",
        "print('Files')\n",
        "files = run.get_file_names()\n",
        "for file in files:\n",
        "    print(file)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "Metrics:\nBMI - {'stat': ['count', 'mean', 'std', 'min', '25%', '50%', '75%', 'max'], 'values': [10000.0, 31.56702174359113, 9.804365693559113, 18.20080735, 21.247426835, 31.922420785, 39.3289214475, 56.03462763]}\n---\nno_observations - 10000\n---\nAge - {'stat': ['count', 'mean', 'std', 'min', '25%', '50%', '75%', 'max'], 'values': [10000.0, 30.1341, 12.106046952960462, 21.0, 22.0, 24.0, 35.0, 77.0]}\n---\nPregnancies - {'stat': ['count', 'mean', 'std', 'min', '25%', '50%', '75%', 'max'], 'values': [10000.0, 3.2558, 3.4057196379950074, 0.0, 0.0, 2.0, 6.0, 14.0]}\n---\nPregnancy Categories - [0, 8, 7, 9, 1, 3, 5, 2, 6, 11, 4, 13, 10, 12, 14]\n---\nPlasmaGlucose - {'stat': ['count', 'mean', 'std', 'min', '25%', '50%', '75%', 'max'], 'values': [10000.0, 107.8502, 31.920909360565563, 44.0, 84.0, 105.0, 129.0, 192.0]}\n---\nlabel distribution - aml://artifactId/ExperimentRun/dcid.0c6d9f05-e86c-4179-b024-7a36b747af6d/label distribution_1676829248.png\n---\nDiastolicBloodPressure - {'stat': ['count', 'mean', 'std', 'min', '25%', '50%', '75%', 'max'], 'values': [10000.0, 71.2075, 16.801478289640706, 24.0, 58.0, 72.0, 85.0, 117.0]}\n---\nTricepsThickness - {'stat': ['count', 'mean', 'std', 'min', '25%', '50%', '75%', 'max'], 'values': [10000.0, 28.8176, 14.506480415228332, 7.0, 15.0, 31.0, 41.0, 92.0]}\n---\nSerumInsulin - {'stat': ['count', 'mean', 'std', 'min', '25%', '50%', '75%', 'max'], 'values': [10000.0, 139.2436, 133.77791937465278, 14.0, 39.0, 85.0, 197.0, 796.0]}\n---\n\n\nFiles\nlabel distribution_1676829248.png\noutputs/diabetesSample.csv\n"
        }
      ],
      "execution_count": 29,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676829669675
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# To download files:\n",
        "\n",
        "import os\n",
        "downloadFolder = 'downloadedFiles'\n",
        "run.download_files(prefix='outputs', output_directory=downloadFolder)\n",
        "for root, directory, filenames in os.walk(downloadFolder):\n",
        "    for filename in filenames:\n",
        "        print (os.path.join(root,filename))"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "downloadedFiles/outputs/diabetesSample.csv\n"
        }
      ],
      "execution_count": 32,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676830000706
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "run.get_details_with_logs() # This can be useful for troubleshooting!"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 30,
          "data": {
            "text/plain": "{'runId': '0c6d9f05-e86c-4179-b024-7a36b747af6d',\n 'target': 'local',\n 'status': 'Completed',\n 'startTimeUtc': '2023-02-19T17:54:05.759454Z',\n 'endTimeUtc': '2023-02-19T17:54:14.526171Z',\n 'services': {},\n 'properties': {'azureml.git.repository_uri': 'https://github.com/AndreiRoibu/AzureMachineLearning.git',\n  'mlflow.source.git.repoURL': 'https://github.com/AndreiRoibu/AzureMachineLearning.git',\n  'azureml.git.branch': 'main',\n  'mlflow.source.git.branch': 'main',\n  'azureml.git.commit': '9dc35540e3400103c401c207864eb19d17adf017',\n  'mlflow.source.git.commit': '9dc35540e3400103c401c207864eb19d17adf017',\n  'azureml.git.dirty': 'True',\n  'ContentSnapshotId': '55585d8a-a866-4efa-93d6-86a7147df50a'},\n 'inputDatasets': [],\n 'outputDatasets': [],\n 'logFiles': {},\n 'submittedBy': 'Andrei-Claudiu Roibu'}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 30,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1676829862644
        }
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python310-sdkv2",
      "language": "python",
      "display_name": "Python 3.10 - SDK v2"
    },
    "language_info": {
      "name": "python",
      "version": "3.8.10",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "microsoft": {
      "ms_spell_check": {
        "ms_spell_check_language": "en"
      },
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    },
    "kernel_info": {
      "name": "python310-sdkv2"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}